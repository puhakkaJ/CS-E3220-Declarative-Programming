Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> spec
Rule 1     spec -> statement
Rule 2     spec -> statement spec
Rule 3     statement -> ID EQ NUMBER SEMICOLON
Rule 4     statement -> TYPE ID EQ setexpr SEMICOLON
Rule 5     statement -> SOURCE initlist SEMICOLON
Rule 6     statement -> SOURCEFORMULA boolexpr SEMICOLON
Rule 7     statement -> TARGET boolexpr SEMICOLON
Rule 8     statement -> TRAJECTORYFORMULA boolexpr SEMICOLON
Rule 9     setexpr -> LBRACK tnumexpr COMMA tnumexpr RBRACK
Rule 10    setexpr -> LBRACE stringlist RBRACE
Rule 11    setexpr -> ID
Rule 12    stringlist -> enum
Rule 13    enum -> ID
Rule 14    enum -> NUMBER
Rule 15    stringlist -> enum COMMA stringlist
Rule 16    boolexpr -> boolexpr AND boolexpr
Rule 17    boolexpr -> boolexpr OR boolexpr
Rule 18    boolexpr -> boolexpr IMPL boolexpr
Rule 19    boolexpr -> boolexpr EQVI boolexpr
Rule 20    boolexpr -> NOT boolexpr
Rule 21    boolexpr -> PTRUE
Rule 22    boolexpr -> PFALSE
Rule 23    boolexpr -> EXISTS LPAREN paramlist RPAREN boolexpr
Rule 24    boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr
Rule 25    boolexpr -> ATMOST NUMBER LPAREN boolexprlist RPAREN
Rule 26    boolexpr -> ATLEAST NUMBER LPAREN boolexprlist RPAREN
Rule 27    boolexpr -> EXACTLY NUMBER LPAREN boolexprlist RPAREN
Rule 28    boolexpr -> BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
Rule 29    boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
Rule 30    boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
Rule 31    boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
Rule 32    boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
Rule 33    boolexprlist -> boolexpr
Rule 34    boolexprlist -> boolexpr COMMA boolexprlist
Rule 35    boolexpr -> atom
Rule 36    boolexpr -> atom AT NUMBER
Rule 37    boolexpr -> LPAREN boolexpr RPAREN
Rule 38    boolexpr -> LBRACK numexpr GT numexpr RBRACK
Rule 39    boolexpr -> LBRACK numexpr LT numexpr RBRACK
Rule 40    boolexpr -> LBRACK numexpr GEQ numexpr RBRACK
Rule 41    boolexpr -> LBRACK numexpr LEQ numexpr RBRACK
Rule 42    boolexpr -> LBRACK numexpr EQ numexpr RBRACK
Rule 43    numexpr -> LPAREN numexpr RPAREN
Rule 44    numexpr -> NUMBER
Rule 45    numexpr -> atom
Rule 46    numexpr -> numexpr PLUS numexpr
Rule 47    numexpr -> numexpr MINUS numexpr
Rule 48    numexpr -> numexpr TIMES numexpr
Rule 49    tnumexpr -> LPAREN numexpr RPAREN
Rule 50    tnumexpr -> NUMBER
Rule 51    tnumexpr -> ID
Rule 52    tnumexpr -> tnumexpr PLUS tnumexpr
Rule 53    tnumexpr -> tnumexpr MINUS tnumexpr
Rule 54    tnumexpr -> tnumexpr TIMES tnumexpr
Rule 55    termlist -> term COMMA termlist
Rule 56    termlist -> term
Rule 57    term -> tnumexpr
Rule 58    atom -> ID
Rule 59    atom -> ID LPAREN termlist RPAREN
Rule 60    initlist -> atom
Rule 61    initlist -> atom COMMA initlist
Rule 62    initlist -> atom EQ NUMBER
Rule 63    initlist -> atom EQ NUMBER COMMA initlist
Rule 64    effects -> effect
Rule 65    effects -> effect effects
Rule 66    effect -> atom SEMICOLON
Rule 67    effect -> NOT atom SEMICOLON
Rule 68    effect -> atom ASSIGN numexpr SEMICOLON
Rule 69    effect -> IF boolexpr LBRACE effects RBRACE
Rule 70    effect -> FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE
Rule 71    paramlist -> param
Rule 72    paramlist -> param COMMA paramlist
Rule 73    param -> ID COLON setexpr
Rule 74    statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE
Rule 75    statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE

Terminals, with rules where they appear

AND                  : 16
ASSIGN               : 68
AT                   : 36
ATLEAST              : 26 30
ATMOST               : 25 29
BETWEEN              : 28 32
COLON                : 73
COMMA                : 9 15 34 55 61 63 72
EQ                   : 3 4 42 62 63
EQVI                 : 19
EXACTLY              : 27 31
EXISTS               : 23
FORALL               : 24 70
GEQ                  : 40
GT                   : 38
ID                   : 3 4 11 13 51 58 59 73 74 75
IF                   : 69
IMPL                 : 18
LBRACE               : 10 69 70 74 75
LBRACK               : 9 38 39 40 41 42
LEQ                  : 41
LPAREN               : 23 24 25 26 27 28 29 30 31 32 37 43 49 59 70 74 75
LT                   : 39
MINUS                : 47 53
NOT                  : 20 67
NUMBER               : 3 14 25 26 27 28 28 29 30 31 32 32 36 44 50 62 63
OR                   : 17
PFALSE               : 22
PLUS                 : 46 52
PTRUE                : 21
RBRACE               : 10 69 70 74 75
RBRACK               : 9 38 39 40 41 42
RPAREN               : 23 24 25 26 27 28 29 30 31 32 37 43 49 59 70 74 75
SEMICOLON            : 3 4 5 6 7 8 66 67 68
SOURCE               : 5
SOURCEFORMULA        : 6
TARGET               : 7
TIMES                : 48 54
TRAJECTORYFORMULA    : 8
TRANSITION           : 74 75
TYPE                 : 4
error                : 

Nonterminals, with rules where they appear

atom                 : 35 36 45 60 61 62 63 66 67 68
boolexpr             : 6 7 8 16 16 17 17 18 18 19 19 20 23 24 29 30 31 32 33 34 37 69 74 75
boolexprlist         : 25 26 27 28 34
effect               : 64 65
effects              : 65 69 70 74 75
enum                 : 12 15
initlist             : 5 61 63
numexpr              : 38 38 39 39 40 40 41 41 42 42 43 46 46 47 47 48 48 49 68
param                : 71 72
paramlist            : 23 24 29 30 31 32 70 72 74
setexpr              : 4 73
spec                 : 2 0
statement            : 1 2
stringlist           : 10 15
term                 : 55 56
termlist             : 55 59
tnumexpr             : 9 9 52 52 53 53 54 54 57

Parsing method: LALR

state 0

    (0) S' -> . spec
    (1) spec -> . statement
    (2) spec -> . statement spec
    (3) statement -> . ID EQ NUMBER SEMICOLON
    (4) statement -> . TYPE ID EQ setexpr SEMICOLON
    (5) statement -> . SOURCE initlist SEMICOLON
    (6) statement -> . SOURCEFORMULA boolexpr SEMICOLON
    (7) statement -> . TARGET boolexpr SEMICOLON
    (8) statement -> . TRAJECTORYFORMULA boolexpr SEMICOLON
    (74) statement -> . TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE
    (75) statement -> . TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE

    ID              shift and go to state 3
    TYPE            shift and go to state 4
    SOURCE          shift and go to state 5
    SOURCEFORMULA   shift and go to state 6
    TARGET          shift and go to state 7
    TRAJECTORYFORMULA shift and go to state 8
    TRANSITION      shift and go to state 9

    spec                           shift and go to state 1
    statement                      shift and go to state 2

state 1

    (0) S' -> spec .



state 2

    (1) spec -> statement .
    (2) spec -> statement . spec
    (1) spec -> . statement
    (2) spec -> . statement spec
    (3) statement -> . ID EQ NUMBER SEMICOLON
    (4) statement -> . TYPE ID EQ setexpr SEMICOLON
    (5) statement -> . SOURCE initlist SEMICOLON
    (6) statement -> . SOURCEFORMULA boolexpr SEMICOLON
    (7) statement -> . TARGET boolexpr SEMICOLON
    (8) statement -> . TRAJECTORYFORMULA boolexpr SEMICOLON
    (74) statement -> . TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE
    (75) statement -> . TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE

    $end            reduce using rule 1 (spec -> statement .)
    ID              shift and go to state 3
    TYPE            shift and go to state 4
    SOURCE          shift and go to state 5
    SOURCEFORMULA   shift and go to state 6
    TARGET          shift and go to state 7
    TRAJECTORYFORMULA shift and go to state 8
    TRANSITION      shift and go to state 9

    statement                      shift and go to state 2
    spec                           shift and go to state 10

state 3

    (3) statement -> ID . EQ NUMBER SEMICOLON

    EQ              shift and go to state 11


state 4

    (4) statement -> TYPE . ID EQ setexpr SEMICOLON

    ID              shift and go to state 12


state 5

    (5) statement -> SOURCE . initlist SEMICOLON
    (60) initlist -> . atom
    (61) initlist -> . atom COMMA initlist
    (62) initlist -> . atom EQ NUMBER
    (63) initlist -> . atom EQ NUMBER COMMA initlist
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    ID              shift and go to state 15

    initlist                       shift and go to state 13
    atom                           shift and go to state 14

state 6

    (6) statement -> SOURCEFORMULA . boolexpr SEMICOLON
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 16
    atom                           shift and go to state 27

state 7

    (7) statement -> TARGET . boolexpr SEMICOLON
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 29
    atom                           shift and go to state 27

state 8

    (8) statement -> TRAJECTORYFORMULA . boolexpr SEMICOLON
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 30
    atom                           shift and go to state 27

state 9

    (74) statement -> TRANSITION . ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE
    (75) statement -> TRANSITION . ID LPAREN RPAREN boolexpr LBRACE effects RBRACE

    ID              shift and go to state 31


state 10

    (2) spec -> statement spec .

    $end            reduce using rule 2 (spec -> statement spec .)


state 11

    (3) statement -> ID EQ . NUMBER SEMICOLON

    NUMBER          shift and go to state 32


state 12

    (4) statement -> TYPE ID . EQ setexpr SEMICOLON

    EQ              shift and go to state 33


state 13

    (5) statement -> SOURCE initlist . SEMICOLON

    SEMICOLON       shift and go to state 34


state 14

    (60) initlist -> atom .
    (61) initlist -> atom . COMMA initlist
    (62) initlist -> atom . EQ NUMBER
    (63) initlist -> atom . EQ NUMBER COMMA initlist

    SEMICOLON       reduce using rule 60 (initlist -> atom .)
    COMMA           shift and go to state 35
    EQ              shift and go to state 36


state 15

    (58) atom -> ID .
    (59) atom -> ID . LPAREN termlist RPAREN

    COMMA           reduce using rule 58 (atom -> ID .)
    EQ              reduce using rule 58 (atom -> ID .)
    SEMICOLON       reduce using rule 58 (atom -> ID .)
    AT              reduce using rule 58 (atom -> ID .)
    AND             reduce using rule 58 (atom -> ID .)
    OR              reduce using rule 58 (atom -> ID .)
    IMPL            reduce using rule 58 (atom -> ID .)
    EQVI            reduce using rule 58 (atom -> ID .)
    RPAREN          reduce using rule 58 (atom -> ID .)
    LBRACE          reduce using rule 58 (atom -> ID .)
    GT              reduce using rule 58 (atom -> ID .)
    LT              reduce using rule 58 (atom -> ID .)
    GEQ             reduce using rule 58 (atom -> ID .)
    LEQ             reduce using rule 58 (atom -> ID .)
    PLUS            reduce using rule 58 (atom -> ID .)
    MINUS           reduce using rule 58 (atom -> ID .)
    TIMES           reduce using rule 58 (atom -> ID .)
    RBRACK          reduce using rule 58 (atom -> ID .)
    ASSIGN          reduce using rule 58 (atom -> ID .)
    LPAREN          shift and go to state 37


state 16

    (6) statement -> SOURCEFORMULA boolexpr . SEMICOLON
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       shift and go to state 38
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42


state 17

    (20) boolexpr -> NOT . boolexpr
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 43
    atom                           shift and go to state 27

state 18

    (21) boolexpr -> PTRUE .

    SEMICOLON       reduce using rule 21 (boolexpr -> PTRUE .)
    AND             reduce using rule 21 (boolexpr -> PTRUE .)
    OR              reduce using rule 21 (boolexpr -> PTRUE .)
    IMPL            reduce using rule 21 (boolexpr -> PTRUE .)
    EQVI            reduce using rule 21 (boolexpr -> PTRUE .)
    RPAREN          reduce using rule 21 (boolexpr -> PTRUE .)
    COMMA           reduce using rule 21 (boolexpr -> PTRUE .)
    LBRACE          reduce using rule 21 (boolexpr -> PTRUE .)


state 19

    (22) boolexpr -> PFALSE .

    SEMICOLON       reduce using rule 22 (boolexpr -> PFALSE .)
    AND             reduce using rule 22 (boolexpr -> PFALSE .)
    OR              reduce using rule 22 (boolexpr -> PFALSE .)
    IMPL            reduce using rule 22 (boolexpr -> PFALSE .)
    EQVI            reduce using rule 22 (boolexpr -> PFALSE .)
    RPAREN          reduce using rule 22 (boolexpr -> PFALSE .)
    COMMA           reduce using rule 22 (boolexpr -> PFALSE .)
    LBRACE          reduce using rule 22 (boolexpr -> PFALSE .)


state 20

    (23) boolexpr -> EXISTS . LPAREN paramlist RPAREN boolexpr

    LPAREN          shift and go to state 44


state 21

    (37) boolexpr -> LPAREN . boolexpr RPAREN
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 45
    atom                           shift and go to state 27

state 22

    (24) boolexpr -> FORALL . LPAREN paramlist RPAREN boolexpr

    LPAREN          shift and go to state 46


state 23

    (25) boolexpr -> ATMOST . NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> ATMOST . NUMBER LPAREN paramlist RPAREN boolexpr

    NUMBER          shift and go to state 47


state 24

    (26) boolexpr -> ATLEAST . NUMBER LPAREN boolexprlist RPAREN
    (30) boolexpr -> ATLEAST . NUMBER LPAREN paramlist RPAREN boolexpr

    NUMBER          shift and go to state 48


state 25

    (27) boolexpr -> EXACTLY . NUMBER LPAREN boolexprlist RPAREN
    (31) boolexpr -> EXACTLY . NUMBER LPAREN paramlist RPAREN boolexpr

    NUMBER          shift and go to state 49


state 26

    (28) boolexpr -> BETWEEN . NUMBER NUMBER LPAREN boolexprlist RPAREN
    (32) boolexpr -> BETWEEN . NUMBER NUMBER LPAREN paramlist RPAREN boolexpr

    NUMBER          shift and go to state 50


state 27

    (35) boolexpr -> atom .
    (36) boolexpr -> atom . AT NUMBER

    SEMICOLON       reduce using rule 35 (boolexpr -> atom .)
    AND             reduce using rule 35 (boolexpr -> atom .)
    OR              reduce using rule 35 (boolexpr -> atom .)
    IMPL            reduce using rule 35 (boolexpr -> atom .)
    EQVI            reduce using rule 35 (boolexpr -> atom .)
    RPAREN          reduce using rule 35 (boolexpr -> atom .)
    COMMA           reduce using rule 35 (boolexpr -> atom .)
    LBRACE          reduce using rule 35 (boolexpr -> atom .)
    AT              shift and go to state 51


state 28

    (38) boolexpr -> LBRACK . numexpr GT numexpr RBRACK
    (39) boolexpr -> LBRACK . numexpr LT numexpr RBRACK
    (40) boolexpr -> LBRACK . numexpr GEQ numexpr RBRACK
    (41) boolexpr -> LBRACK . numexpr LEQ numexpr RBRACK
    (42) boolexpr -> LBRACK . numexpr EQ numexpr RBRACK
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    numexpr                        shift and go to state 52
    atom                           shift and go to state 55

state 29

    (7) statement -> TARGET boolexpr . SEMICOLON
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       shift and go to state 56
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42


state 30

    (8) statement -> TRAJECTORYFORMULA boolexpr . SEMICOLON
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       shift and go to state 57
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42


state 31

    (74) statement -> TRANSITION ID . LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE
    (75) statement -> TRANSITION ID . LPAREN RPAREN boolexpr LBRACE effects RBRACE

    LPAREN          shift and go to state 58


state 32

    (3) statement -> ID EQ NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 59


state 33

    (4) statement -> TYPE ID EQ . setexpr SEMICOLON
    (9) setexpr -> . LBRACK tnumexpr COMMA tnumexpr RBRACK
    (10) setexpr -> . LBRACE stringlist RBRACE
    (11) setexpr -> . ID

    LBRACK          shift and go to state 62
    LBRACE          shift and go to state 63
    ID              shift and go to state 60

    setexpr                        shift and go to state 61

state 34

    (5) statement -> SOURCE initlist SEMICOLON .

    ID              reduce using rule 5 (statement -> SOURCE initlist SEMICOLON .)
    TYPE            reduce using rule 5 (statement -> SOURCE initlist SEMICOLON .)
    SOURCE          reduce using rule 5 (statement -> SOURCE initlist SEMICOLON .)
    SOURCEFORMULA   reduce using rule 5 (statement -> SOURCE initlist SEMICOLON .)
    TARGET          reduce using rule 5 (statement -> SOURCE initlist SEMICOLON .)
    TRAJECTORYFORMULA reduce using rule 5 (statement -> SOURCE initlist SEMICOLON .)
    TRANSITION      reduce using rule 5 (statement -> SOURCE initlist SEMICOLON .)
    $end            reduce using rule 5 (statement -> SOURCE initlist SEMICOLON .)


state 35

    (61) initlist -> atom COMMA . initlist
    (60) initlist -> . atom
    (61) initlist -> . atom COMMA initlist
    (62) initlist -> . atom EQ NUMBER
    (63) initlist -> . atom EQ NUMBER COMMA initlist
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    ID              shift and go to state 15

    atom                           shift and go to state 14
    initlist                       shift and go to state 64

state 36

    (62) initlist -> atom EQ . NUMBER
    (63) initlist -> atom EQ . NUMBER COMMA initlist

    NUMBER          shift and go to state 65


state 37

    (59) atom -> ID LPAREN . termlist RPAREN
    (55) termlist -> . term COMMA termlist
    (56) termlist -> . term
    (57) term -> . tnumexpr
    (49) tnumexpr -> . LPAREN numexpr RPAREN
    (50) tnumexpr -> . NUMBER
    (51) tnumexpr -> . ID
    (52) tnumexpr -> . tnumexpr PLUS tnumexpr
    (53) tnumexpr -> . tnumexpr MINUS tnumexpr
    (54) tnumexpr -> . tnumexpr TIMES tnumexpr

    LPAREN          shift and go to state 67
    NUMBER          shift and go to state 71
    ID              shift and go to state 66

    termlist                       shift and go to state 68
    term                           shift and go to state 69
    tnumexpr                       shift and go to state 70

state 38

    (6) statement -> SOURCEFORMULA boolexpr SEMICOLON .

    ID              reduce using rule 6 (statement -> SOURCEFORMULA boolexpr SEMICOLON .)
    TYPE            reduce using rule 6 (statement -> SOURCEFORMULA boolexpr SEMICOLON .)
    SOURCE          reduce using rule 6 (statement -> SOURCEFORMULA boolexpr SEMICOLON .)
    SOURCEFORMULA   reduce using rule 6 (statement -> SOURCEFORMULA boolexpr SEMICOLON .)
    TARGET          reduce using rule 6 (statement -> SOURCEFORMULA boolexpr SEMICOLON .)
    TRAJECTORYFORMULA reduce using rule 6 (statement -> SOURCEFORMULA boolexpr SEMICOLON .)
    TRANSITION      reduce using rule 6 (statement -> SOURCEFORMULA boolexpr SEMICOLON .)
    $end            reduce using rule 6 (statement -> SOURCEFORMULA boolexpr SEMICOLON .)


state 39

    (16) boolexpr -> boolexpr AND . boolexpr
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 72
    atom                           shift and go to state 27

state 40

    (17) boolexpr -> boolexpr OR . boolexpr
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 73
    atom                           shift and go to state 27

state 41

    (18) boolexpr -> boolexpr IMPL . boolexpr
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 74
    atom                           shift and go to state 27

state 42

    (19) boolexpr -> boolexpr EQVI . boolexpr
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 75
    atom                           shift and go to state 27

state 43

    (20) boolexpr -> NOT boolexpr .
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 20 (boolexpr -> NOT boolexpr .)
    AND             reduce using rule 20 (boolexpr -> NOT boolexpr .)
    OR              reduce using rule 20 (boolexpr -> NOT boolexpr .)
    IMPL            reduce using rule 20 (boolexpr -> NOT boolexpr .)
    EQVI            reduce using rule 20 (boolexpr -> NOT boolexpr .)
    RPAREN          reduce using rule 20 (boolexpr -> NOT boolexpr .)
    COMMA           reduce using rule 20 (boolexpr -> NOT boolexpr .)
    LBRACE          reduce using rule 20 (boolexpr -> NOT boolexpr .)

  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! IMPL            [ shift and go to state 41 ]
  ! EQVI            [ shift and go to state 42 ]


state 44

    (23) boolexpr -> EXISTS LPAREN . paramlist RPAREN boolexpr
    (71) paramlist -> . param
    (72) paramlist -> . param COMMA paramlist
    (73) param -> . ID COLON setexpr

    ID              shift and go to state 78

    paramlist                      shift and go to state 76
    param                          shift and go to state 77

state 45

    (37) boolexpr -> LPAREN boolexpr . RPAREN
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    RPAREN          shift and go to state 79
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42


state 46

    (24) boolexpr -> FORALL LPAREN . paramlist RPAREN boolexpr
    (71) paramlist -> . param
    (72) paramlist -> . param COMMA paramlist
    (73) param -> . ID COLON setexpr

    ID              shift and go to state 78

    paramlist                      shift and go to state 80
    param                          shift and go to state 77

state 47

    (25) boolexpr -> ATMOST NUMBER . LPAREN boolexprlist RPAREN
    (29) boolexpr -> ATMOST NUMBER . LPAREN paramlist RPAREN boolexpr

    LPAREN          shift and go to state 81


state 48

    (26) boolexpr -> ATLEAST NUMBER . LPAREN boolexprlist RPAREN
    (30) boolexpr -> ATLEAST NUMBER . LPAREN paramlist RPAREN boolexpr

    LPAREN          shift and go to state 82


state 49

    (27) boolexpr -> EXACTLY NUMBER . LPAREN boolexprlist RPAREN
    (31) boolexpr -> EXACTLY NUMBER . LPAREN paramlist RPAREN boolexpr

    LPAREN          shift and go to state 83


state 50

    (28) boolexpr -> BETWEEN NUMBER . NUMBER LPAREN boolexprlist RPAREN
    (32) boolexpr -> BETWEEN NUMBER . NUMBER LPAREN paramlist RPAREN boolexpr

    NUMBER          shift and go to state 84


state 51

    (36) boolexpr -> atom AT . NUMBER

    NUMBER          shift and go to state 85


state 52

    (38) boolexpr -> LBRACK numexpr . GT numexpr RBRACK
    (39) boolexpr -> LBRACK numexpr . LT numexpr RBRACK
    (40) boolexpr -> LBRACK numexpr . GEQ numexpr RBRACK
    (41) boolexpr -> LBRACK numexpr . LEQ numexpr RBRACK
    (42) boolexpr -> LBRACK numexpr . EQ numexpr RBRACK
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    GT              shift and go to state 86
    LT              shift and go to state 87
    GEQ             shift and go to state 88
    LEQ             shift and go to state 89
    EQ              shift and go to state 90
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    TIMES           shift and go to state 93


state 53

    (43) numexpr -> LPAREN . numexpr RPAREN
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    numexpr                        shift and go to state 94
    atom                           shift and go to state 55

state 54

    (44) numexpr -> NUMBER .

    GT              reduce using rule 44 (numexpr -> NUMBER .)
    LT              reduce using rule 44 (numexpr -> NUMBER .)
    GEQ             reduce using rule 44 (numexpr -> NUMBER .)
    LEQ             reduce using rule 44 (numexpr -> NUMBER .)
    EQ              reduce using rule 44 (numexpr -> NUMBER .)
    PLUS            reduce using rule 44 (numexpr -> NUMBER .)
    MINUS           reduce using rule 44 (numexpr -> NUMBER .)
    TIMES           reduce using rule 44 (numexpr -> NUMBER .)
    RPAREN          reduce using rule 44 (numexpr -> NUMBER .)
    RBRACK          reduce using rule 44 (numexpr -> NUMBER .)
    SEMICOLON       reduce using rule 44 (numexpr -> NUMBER .)


state 55

    (45) numexpr -> atom .

    GT              reduce using rule 45 (numexpr -> atom .)
    LT              reduce using rule 45 (numexpr -> atom .)
    GEQ             reduce using rule 45 (numexpr -> atom .)
    LEQ             reduce using rule 45 (numexpr -> atom .)
    EQ              reduce using rule 45 (numexpr -> atom .)
    PLUS            reduce using rule 45 (numexpr -> atom .)
    MINUS           reduce using rule 45 (numexpr -> atom .)
    TIMES           reduce using rule 45 (numexpr -> atom .)
    RPAREN          reduce using rule 45 (numexpr -> atom .)
    RBRACK          reduce using rule 45 (numexpr -> atom .)
    SEMICOLON       reduce using rule 45 (numexpr -> atom .)


state 56

    (7) statement -> TARGET boolexpr SEMICOLON .

    ID              reduce using rule 7 (statement -> TARGET boolexpr SEMICOLON .)
    TYPE            reduce using rule 7 (statement -> TARGET boolexpr SEMICOLON .)
    SOURCE          reduce using rule 7 (statement -> TARGET boolexpr SEMICOLON .)
    SOURCEFORMULA   reduce using rule 7 (statement -> TARGET boolexpr SEMICOLON .)
    TARGET          reduce using rule 7 (statement -> TARGET boolexpr SEMICOLON .)
    TRAJECTORYFORMULA reduce using rule 7 (statement -> TARGET boolexpr SEMICOLON .)
    TRANSITION      reduce using rule 7 (statement -> TARGET boolexpr SEMICOLON .)
    $end            reduce using rule 7 (statement -> TARGET boolexpr SEMICOLON .)


state 57

    (8) statement -> TRAJECTORYFORMULA boolexpr SEMICOLON .

    ID              reduce using rule 8 (statement -> TRAJECTORYFORMULA boolexpr SEMICOLON .)
    TYPE            reduce using rule 8 (statement -> TRAJECTORYFORMULA boolexpr SEMICOLON .)
    SOURCE          reduce using rule 8 (statement -> TRAJECTORYFORMULA boolexpr SEMICOLON .)
    SOURCEFORMULA   reduce using rule 8 (statement -> TRAJECTORYFORMULA boolexpr SEMICOLON .)
    TARGET          reduce using rule 8 (statement -> TRAJECTORYFORMULA boolexpr SEMICOLON .)
    TRAJECTORYFORMULA reduce using rule 8 (statement -> TRAJECTORYFORMULA boolexpr SEMICOLON .)
    TRANSITION      reduce using rule 8 (statement -> TRAJECTORYFORMULA boolexpr SEMICOLON .)
    $end            reduce using rule 8 (statement -> TRAJECTORYFORMULA boolexpr SEMICOLON .)


state 58

    (74) statement -> TRANSITION ID LPAREN . paramlist RPAREN boolexpr LBRACE effects RBRACE
    (75) statement -> TRANSITION ID LPAREN . RPAREN boolexpr LBRACE effects RBRACE
    (71) paramlist -> . param
    (72) paramlist -> . param COMMA paramlist
    (73) param -> . ID COLON setexpr

    RPAREN          shift and go to state 96
    ID              shift and go to state 78

    paramlist                      shift and go to state 95
    param                          shift and go to state 77

state 59

    (3) statement -> ID EQ NUMBER SEMICOLON .

    ID              reduce using rule 3 (statement -> ID EQ NUMBER SEMICOLON .)
    TYPE            reduce using rule 3 (statement -> ID EQ NUMBER SEMICOLON .)
    SOURCE          reduce using rule 3 (statement -> ID EQ NUMBER SEMICOLON .)
    SOURCEFORMULA   reduce using rule 3 (statement -> ID EQ NUMBER SEMICOLON .)
    TARGET          reduce using rule 3 (statement -> ID EQ NUMBER SEMICOLON .)
    TRAJECTORYFORMULA reduce using rule 3 (statement -> ID EQ NUMBER SEMICOLON .)
    TRANSITION      reduce using rule 3 (statement -> ID EQ NUMBER SEMICOLON .)
    $end            reduce using rule 3 (statement -> ID EQ NUMBER SEMICOLON .)


state 60

    (11) setexpr -> ID .

    SEMICOLON       reduce using rule 11 (setexpr -> ID .)
    COMMA           reduce using rule 11 (setexpr -> ID .)
    RPAREN          reduce using rule 11 (setexpr -> ID .)


state 61

    (4) statement -> TYPE ID EQ setexpr . SEMICOLON

    SEMICOLON       shift and go to state 97


state 62

    (9) setexpr -> LBRACK . tnumexpr COMMA tnumexpr RBRACK
    (49) tnumexpr -> . LPAREN numexpr RPAREN
    (50) tnumexpr -> . NUMBER
    (51) tnumexpr -> . ID
    (52) tnumexpr -> . tnumexpr PLUS tnumexpr
    (53) tnumexpr -> . tnumexpr MINUS tnumexpr
    (54) tnumexpr -> . tnumexpr TIMES tnumexpr

    LPAREN          shift and go to state 67
    NUMBER          shift and go to state 71
    ID              shift and go to state 66

    tnumexpr                       shift and go to state 98

state 63

    (10) setexpr -> LBRACE . stringlist RBRACE
    (12) stringlist -> . enum
    (15) stringlist -> . enum COMMA stringlist
    (13) enum -> . ID
    (14) enum -> . NUMBER

    ID              shift and go to state 101
    NUMBER          shift and go to state 102

    stringlist                     shift and go to state 99
    enum                           shift and go to state 100

state 64

    (61) initlist -> atom COMMA initlist .

    SEMICOLON       reduce using rule 61 (initlist -> atom COMMA initlist .)


state 65

    (62) initlist -> atom EQ NUMBER .
    (63) initlist -> atom EQ NUMBER . COMMA initlist

    SEMICOLON       reduce using rule 62 (initlist -> atom EQ NUMBER .)
    COMMA           shift and go to state 103


state 66

    (51) tnumexpr -> ID .

    PLUS            reduce using rule 51 (tnumexpr -> ID .)
    MINUS           reduce using rule 51 (tnumexpr -> ID .)
    TIMES           reduce using rule 51 (tnumexpr -> ID .)
    COMMA           reduce using rule 51 (tnumexpr -> ID .)
    RPAREN          reduce using rule 51 (tnumexpr -> ID .)
    RBRACK          reduce using rule 51 (tnumexpr -> ID .)


state 67

    (49) tnumexpr -> LPAREN . numexpr RPAREN
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    numexpr                        shift and go to state 104
    atom                           shift and go to state 55

state 68

    (59) atom -> ID LPAREN termlist . RPAREN

    RPAREN          shift and go to state 105


state 69

    (55) termlist -> term . COMMA termlist
    (56) termlist -> term .

    COMMA           shift and go to state 106
    RPAREN          reduce using rule 56 (termlist -> term .)


state 70

    (57) term -> tnumexpr .
    (52) tnumexpr -> tnumexpr . PLUS tnumexpr
    (53) tnumexpr -> tnumexpr . MINUS tnumexpr
    (54) tnumexpr -> tnumexpr . TIMES tnumexpr

    COMMA           reduce using rule 57 (term -> tnumexpr .)
    RPAREN          reduce using rule 57 (term -> tnumexpr .)
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    TIMES           shift and go to state 109


state 71

    (50) tnumexpr -> NUMBER .

    PLUS            reduce using rule 50 (tnumexpr -> NUMBER .)
    MINUS           reduce using rule 50 (tnumexpr -> NUMBER .)
    TIMES           reduce using rule 50 (tnumexpr -> NUMBER .)
    COMMA           reduce using rule 50 (tnumexpr -> NUMBER .)
    RPAREN          reduce using rule 50 (tnumexpr -> NUMBER .)
    RBRACK          reduce using rule 50 (tnumexpr -> NUMBER .)


state 72

    (16) boolexpr -> boolexpr AND boolexpr .
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 16 (boolexpr -> boolexpr AND boolexpr .)
    AND             reduce using rule 16 (boolexpr -> boolexpr AND boolexpr .)
    OR              reduce using rule 16 (boolexpr -> boolexpr AND boolexpr .)
    IMPL            reduce using rule 16 (boolexpr -> boolexpr AND boolexpr .)
    EQVI            reduce using rule 16 (boolexpr -> boolexpr AND boolexpr .)
    RPAREN          reduce using rule 16 (boolexpr -> boolexpr AND boolexpr .)
    COMMA           reduce using rule 16 (boolexpr -> boolexpr AND boolexpr .)
    LBRACE          reduce using rule 16 (boolexpr -> boolexpr AND boolexpr .)

  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! IMPL            [ shift and go to state 41 ]
  ! EQVI            [ shift and go to state 42 ]


state 73

    (17) boolexpr -> boolexpr OR boolexpr .
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 17 (boolexpr -> boolexpr OR boolexpr .)
    AND             reduce using rule 17 (boolexpr -> boolexpr OR boolexpr .)
    OR              reduce using rule 17 (boolexpr -> boolexpr OR boolexpr .)
    IMPL            reduce using rule 17 (boolexpr -> boolexpr OR boolexpr .)
    EQVI            reduce using rule 17 (boolexpr -> boolexpr OR boolexpr .)
    RPAREN          reduce using rule 17 (boolexpr -> boolexpr OR boolexpr .)
    COMMA           reduce using rule 17 (boolexpr -> boolexpr OR boolexpr .)
    LBRACE          reduce using rule 17 (boolexpr -> boolexpr OR boolexpr .)

  ! AND             [ shift and go to state 39 ]
  ! OR              [ shift and go to state 40 ]
  ! IMPL            [ shift and go to state 41 ]
  ! EQVI            [ shift and go to state 42 ]


state 74

    (18) boolexpr -> boolexpr IMPL boolexpr .
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 18 (boolexpr -> boolexpr IMPL boolexpr .)
    EQVI            reduce using rule 18 (boolexpr -> boolexpr IMPL boolexpr .)
    RPAREN          reduce using rule 18 (boolexpr -> boolexpr IMPL boolexpr .)
    COMMA           reduce using rule 18 (boolexpr -> boolexpr IMPL boolexpr .)
    LBRACE          reduce using rule 18 (boolexpr -> boolexpr IMPL boolexpr .)
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41

  ! AND             [ reduce using rule 18 (boolexpr -> boolexpr IMPL boolexpr .) ]
  ! OR              [ reduce using rule 18 (boolexpr -> boolexpr IMPL boolexpr .) ]
  ! IMPL            [ reduce using rule 18 (boolexpr -> boolexpr IMPL boolexpr .) ]
  ! EQVI            [ shift and go to state 42 ]


state 75

    (19) boolexpr -> boolexpr EQVI boolexpr .
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 19 (boolexpr -> boolexpr EQVI boolexpr .)
    RPAREN          reduce using rule 19 (boolexpr -> boolexpr EQVI boolexpr .)
    COMMA           reduce using rule 19 (boolexpr -> boolexpr EQVI boolexpr .)
    LBRACE          reduce using rule 19 (boolexpr -> boolexpr EQVI boolexpr .)
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42

  ! AND             [ reduce using rule 19 (boolexpr -> boolexpr EQVI boolexpr .) ]
  ! OR              [ reduce using rule 19 (boolexpr -> boolexpr EQVI boolexpr .) ]
  ! IMPL            [ reduce using rule 19 (boolexpr -> boolexpr EQVI boolexpr .) ]
  ! EQVI            [ reduce using rule 19 (boolexpr -> boolexpr EQVI boolexpr .) ]


state 76

    (23) boolexpr -> EXISTS LPAREN paramlist . RPAREN boolexpr

    RPAREN          shift and go to state 110


state 77

    (71) paramlist -> param .
    (72) paramlist -> param . COMMA paramlist

    RPAREN          reduce using rule 71 (paramlist -> param .)
    COMMA           shift and go to state 111


state 78

    (73) param -> ID . COLON setexpr

    COLON           shift and go to state 112


state 79

    (37) boolexpr -> LPAREN boolexpr RPAREN .

    SEMICOLON       reduce using rule 37 (boolexpr -> LPAREN boolexpr RPAREN .)
    AND             reduce using rule 37 (boolexpr -> LPAREN boolexpr RPAREN .)
    OR              reduce using rule 37 (boolexpr -> LPAREN boolexpr RPAREN .)
    IMPL            reduce using rule 37 (boolexpr -> LPAREN boolexpr RPAREN .)
    EQVI            reduce using rule 37 (boolexpr -> LPAREN boolexpr RPAREN .)
    RPAREN          reduce using rule 37 (boolexpr -> LPAREN boolexpr RPAREN .)
    COMMA           reduce using rule 37 (boolexpr -> LPAREN boolexpr RPAREN .)
    LBRACE          reduce using rule 37 (boolexpr -> LPAREN boolexpr RPAREN .)


state 80

    (24) boolexpr -> FORALL LPAREN paramlist . RPAREN boolexpr

    RPAREN          shift and go to state 113


state 81

    (25) boolexpr -> ATMOST NUMBER LPAREN . boolexprlist RPAREN
    (29) boolexpr -> ATMOST NUMBER LPAREN . paramlist RPAREN boolexpr
    (33) boolexprlist -> . boolexpr
    (34) boolexprlist -> . boolexpr COMMA boolexprlist
    (71) paramlist -> . param
    (72) paramlist -> . param COMMA paramlist
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (73) param -> . ID COLON setexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 117

    boolexprlist                   shift and go to state 114
    paramlist                      shift and go to state 115
    boolexpr                       shift and go to state 116
    param                          shift and go to state 77
    atom                           shift and go to state 27

state 82

    (26) boolexpr -> ATLEAST NUMBER LPAREN . boolexprlist RPAREN
    (30) boolexpr -> ATLEAST NUMBER LPAREN . paramlist RPAREN boolexpr
    (33) boolexprlist -> . boolexpr
    (34) boolexprlist -> . boolexpr COMMA boolexprlist
    (71) paramlist -> . param
    (72) paramlist -> . param COMMA paramlist
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (73) param -> . ID COLON setexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 117

    boolexprlist                   shift and go to state 118
    paramlist                      shift and go to state 119
    boolexpr                       shift and go to state 116
    param                          shift and go to state 77
    atom                           shift and go to state 27

state 83

    (27) boolexpr -> EXACTLY NUMBER LPAREN . boolexprlist RPAREN
    (31) boolexpr -> EXACTLY NUMBER LPAREN . paramlist RPAREN boolexpr
    (33) boolexprlist -> . boolexpr
    (34) boolexprlist -> . boolexpr COMMA boolexprlist
    (71) paramlist -> . param
    (72) paramlist -> . param COMMA paramlist
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (73) param -> . ID COLON setexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 117

    boolexprlist                   shift and go to state 120
    paramlist                      shift and go to state 121
    boolexpr                       shift and go to state 116
    param                          shift and go to state 77
    atom                           shift and go to state 27

state 84

    (28) boolexpr -> BETWEEN NUMBER NUMBER . LPAREN boolexprlist RPAREN
    (32) boolexpr -> BETWEEN NUMBER NUMBER . LPAREN paramlist RPAREN boolexpr

    LPAREN          shift and go to state 122


state 85

    (36) boolexpr -> atom AT NUMBER .

    SEMICOLON       reduce using rule 36 (boolexpr -> atom AT NUMBER .)
    AND             reduce using rule 36 (boolexpr -> atom AT NUMBER .)
    OR              reduce using rule 36 (boolexpr -> atom AT NUMBER .)
    IMPL            reduce using rule 36 (boolexpr -> atom AT NUMBER .)
    EQVI            reduce using rule 36 (boolexpr -> atom AT NUMBER .)
    RPAREN          reduce using rule 36 (boolexpr -> atom AT NUMBER .)
    COMMA           reduce using rule 36 (boolexpr -> atom AT NUMBER .)
    LBRACE          reduce using rule 36 (boolexpr -> atom AT NUMBER .)


state 86

    (38) boolexpr -> LBRACK numexpr GT . numexpr RBRACK
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    numexpr                        shift and go to state 123
    atom                           shift and go to state 55

state 87

    (39) boolexpr -> LBRACK numexpr LT . numexpr RBRACK
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    numexpr                        shift and go to state 124
    atom                           shift and go to state 55

state 88

    (40) boolexpr -> LBRACK numexpr GEQ . numexpr RBRACK
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    numexpr                        shift and go to state 125
    atom                           shift and go to state 55

state 89

    (41) boolexpr -> LBRACK numexpr LEQ . numexpr RBRACK
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    numexpr                        shift and go to state 126
    atom                           shift and go to state 55

state 90

    (42) boolexpr -> LBRACK numexpr EQ . numexpr RBRACK
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    numexpr                        shift and go to state 127
    atom                           shift and go to state 55

state 91

    (46) numexpr -> numexpr PLUS . numexpr
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    numexpr                        shift and go to state 128
    atom                           shift and go to state 55

state 92

    (47) numexpr -> numexpr MINUS . numexpr
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    numexpr                        shift and go to state 129
    atom                           shift and go to state 55

state 93

    (48) numexpr -> numexpr TIMES . numexpr
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    numexpr                        shift and go to state 130
    atom                           shift and go to state 55

state 94

    (43) numexpr -> LPAREN numexpr . RPAREN
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    RPAREN          shift and go to state 131
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    TIMES           shift and go to state 93


state 95

    (74) statement -> TRANSITION ID LPAREN paramlist . RPAREN boolexpr LBRACE effects RBRACE

    RPAREN          shift and go to state 132


state 96

    (75) statement -> TRANSITION ID LPAREN RPAREN . boolexpr LBRACE effects RBRACE
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 133
    atom                           shift and go to state 27

state 97

    (4) statement -> TYPE ID EQ setexpr SEMICOLON .

    ID              reduce using rule 4 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    TYPE            reduce using rule 4 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    SOURCE          reduce using rule 4 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    SOURCEFORMULA   reduce using rule 4 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    TARGET          reduce using rule 4 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    TRAJECTORYFORMULA reduce using rule 4 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    TRANSITION      reduce using rule 4 (statement -> TYPE ID EQ setexpr SEMICOLON .)
    $end            reduce using rule 4 (statement -> TYPE ID EQ setexpr SEMICOLON .)


state 98

    (9) setexpr -> LBRACK tnumexpr . COMMA tnumexpr RBRACK
    (52) tnumexpr -> tnumexpr . PLUS tnumexpr
    (53) tnumexpr -> tnumexpr . MINUS tnumexpr
    (54) tnumexpr -> tnumexpr . TIMES tnumexpr

    COMMA           shift and go to state 134
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    TIMES           shift and go to state 109


state 99

    (10) setexpr -> LBRACE stringlist . RBRACE

    RBRACE          shift and go to state 135


state 100

    (12) stringlist -> enum .
    (15) stringlist -> enum . COMMA stringlist

    RBRACE          reduce using rule 12 (stringlist -> enum .)
    COMMA           shift and go to state 136


state 101

    (13) enum -> ID .

    COMMA           reduce using rule 13 (enum -> ID .)
    RBRACE          reduce using rule 13 (enum -> ID .)


state 102

    (14) enum -> NUMBER .

    COMMA           reduce using rule 14 (enum -> NUMBER .)
    RBRACE          reduce using rule 14 (enum -> NUMBER .)


state 103

    (63) initlist -> atom EQ NUMBER COMMA . initlist
    (60) initlist -> . atom
    (61) initlist -> . atom COMMA initlist
    (62) initlist -> . atom EQ NUMBER
    (63) initlist -> . atom EQ NUMBER COMMA initlist
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    ID              shift and go to state 15

    atom                           shift and go to state 14
    initlist                       shift and go to state 137

state 104

    (49) tnumexpr -> LPAREN numexpr . RPAREN
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    RPAREN          shift and go to state 138
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    TIMES           shift and go to state 93


state 105

    (59) atom -> ID LPAREN termlist RPAREN .

    COMMA           reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    EQ              reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    SEMICOLON       reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    AT              reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    AND             reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    OR              reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    IMPL            reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    EQVI            reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    RPAREN          reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    LBRACE          reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    GT              reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    LT              reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    GEQ             reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    LEQ             reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    PLUS            reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    MINUS           reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    TIMES           reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    RBRACK          reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)
    ASSIGN          reduce using rule 59 (atom -> ID LPAREN termlist RPAREN .)


state 106

    (55) termlist -> term COMMA . termlist
    (55) termlist -> . term COMMA termlist
    (56) termlist -> . term
    (57) term -> . tnumexpr
    (49) tnumexpr -> . LPAREN numexpr RPAREN
    (50) tnumexpr -> . NUMBER
    (51) tnumexpr -> . ID
    (52) tnumexpr -> . tnumexpr PLUS tnumexpr
    (53) tnumexpr -> . tnumexpr MINUS tnumexpr
    (54) tnumexpr -> . tnumexpr TIMES tnumexpr

    LPAREN          shift and go to state 67
    NUMBER          shift and go to state 71
    ID              shift and go to state 66

    term                           shift and go to state 69
    termlist                       shift and go to state 139
    tnumexpr                       shift and go to state 70

state 107

    (52) tnumexpr -> tnumexpr PLUS . tnumexpr
    (49) tnumexpr -> . LPAREN numexpr RPAREN
    (50) tnumexpr -> . NUMBER
    (51) tnumexpr -> . ID
    (52) tnumexpr -> . tnumexpr PLUS tnumexpr
    (53) tnumexpr -> . tnumexpr MINUS tnumexpr
    (54) tnumexpr -> . tnumexpr TIMES tnumexpr

    LPAREN          shift and go to state 67
    NUMBER          shift and go to state 71
    ID              shift and go to state 66

    tnumexpr                       shift and go to state 140

state 108

    (53) tnumexpr -> tnumexpr MINUS . tnumexpr
    (49) tnumexpr -> . LPAREN numexpr RPAREN
    (50) tnumexpr -> . NUMBER
    (51) tnumexpr -> . ID
    (52) tnumexpr -> . tnumexpr PLUS tnumexpr
    (53) tnumexpr -> . tnumexpr MINUS tnumexpr
    (54) tnumexpr -> . tnumexpr TIMES tnumexpr

    LPAREN          shift and go to state 67
    NUMBER          shift and go to state 71
    ID              shift and go to state 66

    tnumexpr                       shift and go to state 141

state 109

    (54) tnumexpr -> tnumexpr TIMES . tnumexpr
    (49) tnumexpr -> . LPAREN numexpr RPAREN
    (50) tnumexpr -> . NUMBER
    (51) tnumexpr -> . ID
    (52) tnumexpr -> . tnumexpr PLUS tnumexpr
    (53) tnumexpr -> . tnumexpr MINUS tnumexpr
    (54) tnumexpr -> . tnumexpr TIMES tnumexpr

    LPAREN          shift and go to state 67
    NUMBER          shift and go to state 71
    ID              shift and go to state 66

    tnumexpr                       shift and go to state 142

state 110

    (23) boolexpr -> EXISTS LPAREN paramlist RPAREN . boolexpr
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 143
    atom                           shift and go to state 27

state 111

    (72) paramlist -> param COMMA . paramlist
    (71) paramlist -> . param
    (72) paramlist -> . param COMMA paramlist
    (73) param -> . ID COLON setexpr

    ID              shift and go to state 78

    param                          shift and go to state 77
    paramlist                      shift and go to state 144

state 112

    (73) param -> ID COLON . setexpr
    (9) setexpr -> . LBRACK tnumexpr COMMA tnumexpr RBRACK
    (10) setexpr -> . LBRACE stringlist RBRACE
    (11) setexpr -> . ID

    LBRACK          shift and go to state 62
    LBRACE          shift and go to state 63
    ID              shift and go to state 60

    setexpr                        shift and go to state 145

state 113

    (24) boolexpr -> FORALL LPAREN paramlist RPAREN . boolexpr
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 146
    atom                           shift and go to state 27

state 114

    (25) boolexpr -> ATMOST NUMBER LPAREN boolexprlist . RPAREN

    RPAREN          shift and go to state 147


state 115

    (29) boolexpr -> ATMOST NUMBER LPAREN paramlist . RPAREN boolexpr

    RPAREN          shift and go to state 148


state 116

    (33) boolexprlist -> boolexpr .
    (34) boolexprlist -> boolexpr . COMMA boolexprlist
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    RPAREN          reduce using rule 33 (boolexprlist -> boolexpr .)
    COMMA           shift and go to state 149
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42


state 117

    (73) param -> ID . COLON setexpr
    (58) atom -> ID .
    (59) atom -> ID . LPAREN termlist RPAREN

    COLON           shift and go to state 112
    AT              reduce using rule 58 (atom -> ID .)
    COMMA           reduce using rule 58 (atom -> ID .)
    AND             reduce using rule 58 (atom -> ID .)
    OR              reduce using rule 58 (atom -> ID .)
    IMPL            reduce using rule 58 (atom -> ID .)
    EQVI            reduce using rule 58 (atom -> ID .)
    RPAREN          reduce using rule 58 (atom -> ID .)
    LPAREN          shift and go to state 37


state 118

    (26) boolexpr -> ATLEAST NUMBER LPAREN boolexprlist . RPAREN

    RPAREN          shift and go to state 150


state 119

    (30) boolexpr -> ATLEAST NUMBER LPAREN paramlist . RPAREN boolexpr

    RPAREN          shift and go to state 151


state 120

    (27) boolexpr -> EXACTLY NUMBER LPAREN boolexprlist . RPAREN

    RPAREN          shift and go to state 152


state 121

    (31) boolexpr -> EXACTLY NUMBER LPAREN paramlist . RPAREN boolexpr

    RPAREN          shift and go to state 153


state 122

    (28) boolexpr -> BETWEEN NUMBER NUMBER LPAREN . boolexprlist RPAREN
    (32) boolexpr -> BETWEEN NUMBER NUMBER LPAREN . paramlist RPAREN boolexpr
    (33) boolexprlist -> . boolexpr
    (34) boolexprlist -> . boolexpr COMMA boolexprlist
    (71) paramlist -> . param
    (72) paramlist -> . param COMMA paramlist
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (73) param -> . ID COLON setexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 117

    boolexprlist                   shift and go to state 154
    paramlist                      shift and go to state 155
    boolexpr                       shift and go to state 116
    param                          shift and go to state 77
    atom                           shift and go to state 27

state 123

    (38) boolexpr -> LBRACK numexpr GT numexpr . RBRACK
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    RBRACK          shift and go to state 156
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    TIMES           shift and go to state 93


state 124

    (39) boolexpr -> LBRACK numexpr LT numexpr . RBRACK
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    RBRACK          shift and go to state 157
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    TIMES           shift and go to state 93


state 125

    (40) boolexpr -> LBRACK numexpr GEQ numexpr . RBRACK
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    RBRACK          shift and go to state 158
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    TIMES           shift and go to state 93


state 126

    (41) boolexpr -> LBRACK numexpr LEQ numexpr . RBRACK
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    RBRACK          shift and go to state 159
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    TIMES           shift and go to state 93


state 127

    (42) boolexpr -> LBRACK numexpr EQ numexpr . RBRACK
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    RBRACK          shift and go to state 160
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    TIMES           shift and go to state 93


state 128

    (46) numexpr -> numexpr PLUS numexpr .
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    GT              reduce using rule 46 (numexpr -> numexpr PLUS numexpr .)
    LT              reduce using rule 46 (numexpr -> numexpr PLUS numexpr .)
    GEQ             reduce using rule 46 (numexpr -> numexpr PLUS numexpr .)
    LEQ             reduce using rule 46 (numexpr -> numexpr PLUS numexpr .)
    EQ              reduce using rule 46 (numexpr -> numexpr PLUS numexpr .)
    PLUS            reduce using rule 46 (numexpr -> numexpr PLUS numexpr .)
    MINUS           reduce using rule 46 (numexpr -> numexpr PLUS numexpr .)
    RPAREN          reduce using rule 46 (numexpr -> numexpr PLUS numexpr .)
    RBRACK          reduce using rule 46 (numexpr -> numexpr PLUS numexpr .)
    SEMICOLON       reduce using rule 46 (numexpr -> numexpr PLUS numexpr .)
    TIMES           shift and go to state 93

  ! TIMES           [ reduce using rule 46 (numexpr -> numexpr PLUS numexpr .) ]
  ! PLUS            [ shift and go to state 91 ]
  ! MINUS           [ shift and go to state 92 ]


state 129

    (47) numexpr -> numexpr MINUS numexpr .
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    GT              reduce using rule 47 (numexpr -> numexpr MINUS numexpr .)
    LT              reduce using rule 47 (numexpr -> numexpr MINUS numexpr .)
    GEQ             reduce using rule 47 (numexpr -> numexpr MINUS numexpr .)
    LEQ             reduce using rule 47 (numexpr -> numexpr MINUS numexpr .)
    EQ              reduce using rule 47 (numexpr -> numexpr MINUS numexpr .)
    PLUS            reduce using rule 47 (numexpr -> numexpr MINUS numexpr .)
    MINUS           reduce using rule 47 (numexpr -> numexpr MINUS numexpr .)
    RPAREN          reduce using rule 47 (numexpr -> numexpr MINUS numexpr .)
    RBRACK          reduce using rule 47 (numexpr -> numexpr MINUS numexpr .)
    SEMICOLON       reduce using rule 47 (numexpr -> numexpr MINUS numexpr .)
    TIMES           shift and go to state 93

  ! TIMES           [ reduce using rule 47 (numexpr -> numexpr MINUS numexpr .) ]
  ! PLUS            [ shift and go to state 91 ]
  ! MINUS           [ shift and go to state 92 ]


state 130

    (48) numexpr -> numexpr TIMES numexpr .
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    GT              reduce using rule 48 (numexpr -> numexpr TIMES numexpr .)
    LT              reduce using rule 48 (numexpr -> numexpr TIMES numexpr .)
    GEQ             reduce using rule 48 (numexpr -> numexpr TIMES numexpr .)
    LEQ             reduce using rule 48 (numexpr -> numexpr TIMES numexpr .)
    EQ              reduce using rule 48 (numexpr -> numexpr TIMES numexpr .)
    PLUS            reduce using rule 48 (numexpr -> numexpr TIMES numexpr .)
    MINUS           reduce using rule 48 (numexpr -> numexpr TIMES numexpr .)
    TIMES           reduce using rule 48 (numexpr -> numexpr TIMES numexpr .)
    RPAREN          reduce using rule 48 (numexpr -> numexpr TIMES numexpr .)
    RBRACK          reduce using rule 48 (numexpr -> numexpr TIMES numexpr .)
    SEMICOLON       reduce using rule 48 (numexpr -> numexpr TIMES numexpr .)

  ! PLUS            [ shift and go to state 91 ]
  ! MINUS           [ shift and go to state 92 ]
  ! TIMES           [ shift and go to state 93 ]


state 131

    (43) numexpr -> LPAREN numexpr RPAREN .

    GT              reduce using rule 43 (numexpr -> LPAREN numexpr RPAREN .)
    LT              reduce using rule 43 (numexpr -> LPAREN numexpr RPAREN .)
    GEQ             reduce using rule 43 (numexpr -> LPAREN numexpr RPAREN .)
    LEQ             reduce using rule 43 (numexpr -> LPAREN numexpr RPAREN .)
    EQ              reduce using rule 43 (numexpr -> LPAREN numexpr RPAREN .)
    PLUS            reduce using rule 43 (numexpr -> LPAREN numexpr RPAREN .)
    MINUS           reduce using rule 43 (numexpr -> LPAREN numexpr RPAREN .)
    TIMES           reduce using rule 43 (numexpr -> LPAREN numexpr RPAREN .)
    RPAREN          reduce using rule 43 (numexpr -> LPAREN numexpr RPAREN .)
    RBRACK          reduce using rule 43 (numexpr -> LPAREN numexpr RPAREN .)
    SEMICOLON       reduce using rule 43 (numexpr -> LPAREN numexpr RPAREN .)


state 132

    (74) statement -> TRANSITION ID LPAREN paramlist RPAREN . boolexpr LBRACE effects RBRACE
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 161
    atom                           shift and go to state 27

state 133

    (75) statement -> TRANSITION ID LPAREN RPAREN boolexpr . LBRACE effects RBRACE
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    LBRACE          shift and go to state 162
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42


state 134

    (9) setexpr -> LBRACK tnumexpr COMMA . tnumexpr RBRACK
    (49) tnumexpr -> . LPAREN numexpr RPAREN
    (50) tnumexpr -> . NUMBER
    (51) tnumexpr -> . ID
    (52) tnumexpr -> . tnumexpr PLUS tnumexpr
    (53) tnumexpr -> . tnumexpr MINUS tnumexpr
    (54) tnumexpr -> . tnumexpr TIMES tnumexpr

    LPAREN          shift and go to state 67
    NUMBER          shift and go to state 71
    ID              shift and go to state 66

    tnumexpr                       shift and go to state 163

state 135

    (10) setexpr -> LBRACE stringlist RBRACE .

    SEMICOLON       reduce using rule 10 (setexpr -> LBRACE stringlist RBRACE .)
    COMMA           reduce using rule 10 (setexpr -> LBRACE stringlist RBRACE .)
    RPAREN          reduce using rule 10 (setexpr -> LBRACE stringlist RBRACE .)


state 136

    (15) stringlist -> enum COMMA . stringlist
    (12) stringlist -> . enum
    (15) stringlist -> . enum COMMA stringlist
    (13) enum -> . ID
    (14) enum -> . NUMBER

    ID              shift and go to state 101
    NUMBER          shift and go to state 102

    enum                           shift and go to state 100
    stringlist                     shift and go to state 164

state 137

    (63) initlist -> atom EQ NUMBER COMMA initlist .

    SEMICOLON       reduce using rule 63 (initlist -> atom EQ NUMBER COMMA initlist .)


state 138

    (49) tnumexpr -> LPAREN numexpr RPAREN .

    PLUS            reduce using rule 49 (tnumexpr -> LPAREN numexpr RPAREN .)
    MINUS           reduce using rule 49 (tnumexpr -> LPAREN numexpr RPAREN .)
    TIMES           reduce using rule 49 (tnumexpr -> LPAREN numexpr RPAREN .)
    COMMA           reduce using rule 49 (tnumexpr -> LPAREN numexpr RPAREN .)
    RPAREN          reduce using rule 49 (tnumexpr -> LPAREN numexpr RPAREN .)
    RBRACK          reduce using rule 49 (tnumexpr -> LPAREN numexpr RPAREN .)


state 139

    (55) termlist -> term COMMA termlist .

    RPAREN          reduce using rule 55 (termlist -> term COMMA termlist .)


state 140

    (52) tnumexpr -> tnumexpr PLUS tnumexpr .
    (52) tnumexpr -> tnumexpr . PLUS tnumexpr
    (53) tnumexpr -> tnumexpr . MINUS tnumexpr
    (54) tnumexpr -> tnumexpr . TIMES tnumexpr

    PLUS            reduce using rule 52 (tnumexpr -> tnumexpr PLUS tnumexpr .)
    MINUS           reduce using rule 52 (tnumexpr -> tnumexpr PLUS tnumexpr .)
    COMMA           reduce using rule 52 (tnumexpr -> tnumexpr PLUS tnumexpr .)
    RPAREN          reduce using rule 52 (tnumexpr -> tnumexpr PLUS tnumexpr .)
    RBRACK          reduce using rule 52 (tnumexpr -> tnumexpr PLUS tnumexpr .)
    TIMES           shift and go to state 109

  ! TIMES           [ reduce using rule 52 (tnumexpr -> tnumexpr PLUS tnumexpr .) ]
  ! PLUS            [ shift and go to state 107 ]
  ! MINUS           [ shift and go to state 108 ]


state 141

    (53) tnumexpr -> tnumexpr MINUS tnumexpr .
    (52) tnumexpr -> tnumexpr . PLUS tnumexpr
    (53) tnumexpr -> tnumexpr . MINUS tnumexpr
    (54) tnumexpr -> tnumexpr . TIMES tnumexpr

    PLUS            reduce using rule 53 (tnumexpr -> tnumexpr MINUS tnumexpr .)
    MINUS           reduce using rule 53 (tnumexpr -> tnumexpr MINUS tnumexpr .)
    COMMA           reduce using rule 53 (tnumexpr -> tnumexpr MINUS tnumexpr .)
    RPAREN          reduce using rule 53 (tnumexpr -> tnumexpr MINUS tnumexpr .)
    RBRACK          reduce using rule 53 (tnumexpr -> tnumexpr MINUS tnumexpr .)
    TIMES           shift and go to state 109

  ! TIMES           [ reduce using rule 53 (tnumexpr -> tnumexpr MINUS tnumexpr .) ]
  ! PLUS            [ shift and go to state 107 ]
  ! MINUS           [ shift and go to state 108 ]


state 142

    (54) tnumexpr -> tnumexpr TIMES tnumexpr .
    (52) tnumexpr -> tnumexpr . PLUS tnumexpr
    (53) tnumexpr -> tnumexpr . MINUS tnumexpr
    (54) tnumexpr -> tnumexpr . TIMES tnumexpr

    PLUS            reduce using rule 54 (tnumexpr -> tnumexpr TIMES tnumexpr .)
    MINUS           reduce using rule 54 (tnumexpr -> tnumexpr TIMES tnumexpr .)
    TIMES           reduce using rule 54 (tnumexpr -> tnumexpr TIMES tnumexpr .)
    COMMA           reduce using rule 54 (tnumexpr -> tnumexpr TIMES tnumexpr .)
    RPAREN          reduce using rule 54 (tnumexpr -> tnumexpr TIMES tnumexpr .)
    RBRACK          reduce using rule 54 (tnumexpr -> tnumexpr TIMES tnumexpr .)

  ! PLUS            [ shift and go to state 107 ]
  ! MINUS           [ shift and go to state 108 ]
  ! TIMES           [ shift and go to state 109 ]


state 143

    (23) boolexpr -> EXISTS LPAREN paramlist RPAREN boolexpr .
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 23 (boolexpr -> EXISTS LPAREN paramlist RPAREN boolexpr .)
    RPAREN          reduce using rule 23 (boolexpr -> EXISTS LPAREN paramlist RPAREN boolexpr .)
    COMMA           reduce using rule 23 (boolexpr -> EXISTS LPAREN paramlist RPAREN boolexpr .)
    LBRACE          reduce using rule 23 (boolexpr -> EXISTS LPAREN paramlist RPAREN boolexpr .)
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42

  ! AND             [ reduce using rule 23 (boolexpr -> EXISTS LPAREN paramlist RPAREN boolexpr .) ]
  ! OR              [ reduce using rule 23 (boolexpr -> EXISTS LPAREN paramlist RPAREN boolexpr .) ]
  ! IMPL            [ reduce using rule 23 (boolexpr -> EXISTS LPAREN paramlist RPAREN boolexpr .) ]
  ! EQVI            [ reduce using rule 23 (boolexpr -> EXISTS LPAREN paramlist RPAREN boolexpr .) ]


state 144

    (72) paramlist -> param COMMA paramlist .

    RPAREN          reduce using rule 72 (paramlist -> param COMMA paramlist .)


state 145

    (73) param -> ID COLON setexpr .

    COMMA           reduce using rule 73 (param -> ID COLON setexpr .)
    RPAREN          reduce using rule 73 (param -> ID COLON setexpr .)


state 146

    (24) boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .)
    RPAREN          reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .)
    COMMA           reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .)
    LBRACE          reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .)
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42

  ! AND             [ reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .) ]
  ! OR              [ reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .) ]
  ! IMPL            [ reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .) ]
  ! EQVI            [ reduce using rule 24 (boolexpr -> FORALL LPAREN paramlist RPAREN boolexpr .) ]


state 147

    (25) boolexpr -> ATMOST NUMBER LPAREN boolexprlist RPAREN .

    SEMICOLON       reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN boolexprlist RPAREN .)
    AND             reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN boolexprlist RPAREN .)
    OR              reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN boolexprlist RPAREN .)
    IMPL            reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN boolexprlist RPAREN .)
    EQVI            reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN boolexprlist RPAREN .)
    RPAREN          reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN boolexprlist RPAREN .)
    COMMA           reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN boolexprlist RPAREN .)
    LBRACE          reduce using rule 25 (boolexpr -> ATMOST NUMBER LPAREN boolexprlist RPAREN .)


state 148

    (29) boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN . boolexpr
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 165
    atom                           shift and go to state 27

state 149

    (34) boolexprlist -> boolexpr COMMA . boolexprlist
    (33) boolexprlist -> . boolexpr
    (34) boolexprlist -> . boolexpr COMMA boolexprlist
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 116
    boolexprlist                   shift and go to state 166
    atom                           shift and go to state 27

state 150

    (26) boolexpr -> ATLEAST NUMBER LPAREN boolexprlist RPAREN .

    SEMICOLON       reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN boolexprlist RPAREN .)
    AND             reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN boolexprlist RPAREN .)
    OR              reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN boolexprlist RPAREN .)
    IMPL            reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN boolexprlist RPAREN .)
    EQVI            reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN boolexprlist RPAREN .)
    RPAREN          reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN boolexprlist RPAREN .)
    COMMA           reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN boolexprlist RPAREN .)
    LBRACE          reduce using rule 26 (boolexpr -> ATLEAST NUMBER LPAREN boolexprlist RPAREN .)


state 151

    (30) boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN . boolexpr
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 167
    atom                           shift and go to state 27

state 152

    (27) boolexpr -> EXACTLY NUMBER LPAREN boolexprlist RPAREN .

    SEMICOLON       reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN boolexprlist RPAREN .)
    AND             reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN boolexprlist RPAREN .)
    OR              reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN boolexprlist RPAREN .)
    IMPL            reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN boolexprlist RPAREN .)
    EQVI            reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN boolexprlist RPAREN .)
    RPAREN          reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN boolexprlist RPAREN .)
    COMMA           reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN boolexprlist RPAREN .)
    LBRACE          reduce using rule 27 (boolexpr -> EXACTLY NUMBER LPAREN boolexprlist RPAREN .)


state 153

    (31) boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN . boolexpr
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 168
    atom                           shift and go to state 27

state 154

    (28) boolexpr -> BETWEEN NUMBER NUMBER LPAREN boolexprlist . RPAREN

    RPAREN          shift and go to state 169


state 155

    (32) boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist . RPAREN boolexpr

    RPAREN          shift and go to state 170


state 156

    (38) boolexpr -> LBRACK numexpr GT numexpr RBRACK .

    SEMICOLON       reduce using rule 38 (boolexpr -> LBRACK numexpr GT numexpr RBRACK .)
    AND             reduce using rule 38 (boolexpr -> LBRACK numexpr GT numexpr RBRACK .)
    OR              reduce using rule 38 (boolexpr -> LBRACK numexpr GT numexpr RBRACK .)
    IMPL            reduce using rule 38 (boolexpr -> LBRACK numexpr GT numexpr RBRACK .)
    EQVI            reduce using rule 38 (boolexpr -> LBRACK numexpr GT numexpr RBRACK .)
    RPAREN          reduce using rule 38 (boolexpr -> LBRACK numexpr GT numexpr RBRACK .)
    COMMA           reduce using rule 38 (boolexpr -> LBRACK numexpr GT numexpr RBRACK .)
    LBRACE          reduce using rule 38 (boolexpr -> LBRACK numexpr GT numexpr RBRACK .)


state 157

    (39) boolexpr -> LBRACK numexpr LT numexpr RBRACK .

    SEMICOLON       reduce using rule 39 (boolexpr -> LBRACK numexpr LT numexpr RBRACK .)
    AND             reduce using rule 39 (boolexpr -> LBRACK numexpr LT numexpr RBRACK .)
    OR              reduce using rule 39 (boolexpr -> LBRACK numexpr LT numexpr RBRACK .)
    IMPL            reduce using rule 39 (boolexpr -> LBRACK numexpr LT numexpr RBRACK .)
    EQVI            reduce using rule 39 (boolexpr -> LBRACK numexpr LT numexpr RBRACK .)
    RPAREN          reduce using rule 39 (boolexpr -> LBRACK numexpr LT numexpr RBRACK .)
    COMMA           reduce using rule 39 (boolexpr -> LBRACK numexpr LT numexpr RBRACK .)
    LBRACE          reduce using rule 39 (boolexpr -> LBRACK numexpr LT numexpr RBRACK .)


state 158

    (40) boolexpr -> LBRACK numexpr GEQ numexpr RBRACK .

    SEMICOLON       reduce using rule 40 (boolexpr -> LBRACK numexpr GEQ numexpr RBRACK .)
    AND             reduce using rule 40 (boolexpr -> LBRACK numexpr GEQ numexpr RBRACK .)
    OR              reduce using rule 40 (boolexpr -> LBRACK numexpr GEQ numexpr RBRACK .)
    IMPL            reduce using rule 40 (boolexpr -> LBRACK numexpr GEQ numexpr RBRACK .)
    EQVI            reduce using rule 40 (boolexpr -> LBRACK numexpr GEQ numexpr RBRACK .)
    RPAREN          reduce using rule 40 (boolexpr -> LBRACK numexpr GEQ numexpr RBRACK .)
    COMMA           reduce using rule 40 (boolexpr -> LBRACK numexpr GEQ numexpr RBRACK .)
    LBRACE          reduce using rule 40 (boolexpr -> LBRACK numexpr GEQ numexpr RBRACK .)


state 159

    (41) boolexpr -> LBRACK numexpr LEQ numexpr RBRACK .

    SEMICOLON       reduce using rule 41 (boolexpr -> LBRACK numexpr LEQ numexpr RBRACK .)
    AND             reduce using rule 41 (boolexpr -> LBRACK numexpr LEQ numexpr RBRACK .)
    OR              reduce using rule 41 (boolexpr -> LBRACK numexpr LEQ numexpr RBRACK .)
    IMPL            reduce using rule 41 (boolexpr -> LBRACK numexpr LEQ numexpr RBRACK .)
    EQVI            reduce using rule 41 (boolexpr -> LBRACK numexpr LEQ numexpr RBRACK .)
    RPAREN          reduce using rule 41 (boolexpr -> LBRACK numexpr LEQ numexpr RBRACK .)
    COMMA           reduce using rule 41 (boolexpr -> LBRACK numexpr LEQ numexpr RBRACK .)
    LBRACE          reduce using rule 41 (boolexpr -> LBRACK numexpr LEQ numexpr RBRACK .)


state 160

    (42) boolexpr -> LBRACK numexpr EQ numexpr RBRACK .

    SEMICOLON       reduce using rule 42 (boolexpr -> LBRACK numexpr EQ numexpr RBRACK .)
    AND             reduce using rule 42 (boolexpr -> LBRACK numexpr EQ numexpr RBRACK .)
    OR              reduce using rule 42 (boolexpr -> LBRACK numexpr EQ numexpr RBRACK .)
    IMPL            reduce using rule 42 (boolexpr -> LBRACK numexpr EQ numexpr RBRACK .)
    EQVI            reduce using rule 42 (boolexpr -> LBRACK numexpr EQ numexpr RBRACK .)
    RPAREN          reduce using rule 42 (boolexpr -> LBRACK numexpr EQ numexpr RBRACK .)
    COMMA           reduce using rule 42 (boolexpr -> LBRACK numexpr EQ numexpr RBRACK .)
    LBRACE          reduce using rule 42 (boolexpr -> LBRACK numexpr EQ numexpr RBRACK .)


state 161

    (74) statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr . LBRACE effects RBRACE
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    LBRACE          shift and go to state 171
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42


state 162

    (75) statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE . effects RBRACE
    (64) effects -> . effect
    (65) effects -> . effect effects
    (66) effect -> . atom SEMICOLON
    (67) effect -> . NOT atom SEMICOLON
    (68) effect -> . atom ASSIGN numexpr SEMICOLON
    (69) effect -> . IF boolexpr LBRACE effects RBRACE
    (70) effect -> . FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 175
    IF              shift and go to state 176
    FORALL          shift and go to state 177
    ID              shift and go to state 15

    effects                        shift and go to state 172
    effect                         shift and go to state 173
    atom                           shift and go to state 174

state 163

    (9) setexpr -> LBRACK tnumexpr COMMA tnumexpr . RBRACK
    (52) tnumexpr -> tnumexpr . PLUS tnumexpr
    (53) tnumexpr -> tnumexpr . MINUS tnumexpr
    (54) tnumexpr -> tnumexpr . TIMES tnumexpr

    RBRACK          shift and go to state 178
    PLUS            shift and go to state 107
    MINUS           shift and go to state 108
    TIMES           shift and go to state 109


state 164

    (15) stringlist -> enum COMMA stringlist .

    RBRACE          reduce using rule 15 (stringlist -> enum COMMA stringlist .)


state 165

    (29) boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 29 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .)
    RPAREN          reduce using rule 29 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .)
    COMMA           reduce using rule 29 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .)
    LBRACE          reduce using rule 29 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .)
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42

  ! AND             [ reduce using rule 29 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! OR              [ reduce using rule 29 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! IMPL            [ reduce using rule 29 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! EQVI            [ reduce using rule 29 (boolexpr -> ATMOST NUMBER LPAREN paramlist RPAREN boolexpr .) ]


state 166

    (34) boolexprlist -> boolexpr COMMA boolexprlist .

    RPAREN          reduce using rule 34 (boolexprlist -> boolexpr COMMA boolexprlist .)


state 167

    (30) boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 30 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .)
    RPAREN          reduce using rule 30 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .)
    COMMA           reduce using rule 30 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .)
    LBRACE          reduce using rule 30 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .)
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42

  ! AND             [ reduce using rule 30 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! OR              [ reduce using rule 30 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! IMPL            [ reduce using rule 30 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! EQVI            [ reduce using rule 30 (boolexpr -> ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr .) ]


state 168

    (31) boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 31 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .)
    RPAREN          reduce using rule 31 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .)
    COMMA           reduce using rule 31 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .)
    LBRACE          reduce using rule 31 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .)
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42

  ! AND             [ reduce using rule 31 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! OR              [ reduce using rule 31 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! IMPL            [ reduce using rule 31 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! EQVI            [ reduce using rule 31 (boolexpr -> EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr .) ]


state 169

    (28) boolexpr -> BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN .

    SEMICOLON       reduce using rule 28 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN .)
    AND             reduce using rule 28 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN .)
    OR              reduce using rule 28 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN .)
    IMPL            reduce using rule 28 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN .)
    EQVI            reduce using rule 28 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN .)
    RPAREN          reduce using rule 28 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN .)
    COMMA           reduce using rule 28 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN .)
    LBRACE          reduce using rule 28 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN .)


state 170

    (32) boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN . boolexpr
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 179
    atom                           shift and go to state 27

state 171

    (74) statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE . effects RBRACE
    (64) effects -> . effect
    (65) effects -> . effect effects
    (66) effect -> . atom SEMICOLON
    (67) effect -> . NOT atom SEMICOLON
    (68) effect -> . atom ASSIGN numexpr SEMICOLON
    (69) effect -> . IF boolexpr LBRACE effects RBRACE
    (70) effect -> . FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 175
    IF              shift and go to state 176
    FORALL          shift and go to state 177
    ID              shift and go to state 15

    effects                        shift and go to state 180
    effect                         shift and go to state 173
    atom                           shift and go to state 174

state 172

    (75) statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects . RBRACE

    RBRACE          shift and go to state 181


state 173

    (64) effects -> effect .
    (65) effects -> effect . effects
    (64) effects -> . effect
    (65) effects -> . effect effects
    (66) effect -> . atom SEMICOLON
    (67) effect -> . NOT atom SEMICOLON
    (68) effect -> . atom ASSIGN numexpr SEMICOLON
    (69) effect -> . IF boolexpr LBRACE effects RBRACE
    (70) effect -> . FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    RBRACE          reduce using rule 64 (effects -> effect .)
    NOT             shift and go to state 175
    IF              shift and go to state 176
    FORALL          shift and go to state 177
    ID              shift and go to state 15

    effect                         shift and go to state 173
    effects                        shift and go to state 182
    atom                           shift and go to state 174

state 174

    (66) effect -> atom . SEMICOLON
    (68) effect -> atom . ASSIGN numexpr SEMICOLON

    SEMICOLON       shift and go to state 183
    ASSIGN          shift and go to state 184


state 175

    (67) effect -> NOT . atom SEMICOLON
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    ID              shift and go to state 15

    atom                           shift and go to state 185

state 176

    (69) effect -> IF . boolexpr LBRACE effects RBRACE
    (16) boolexpr -> . boolexpr AND boolexpr
    (17) boolexpr -> . boolexpr OR boolexpr
    (18) boolexpr -> . boolexpr IMPL boolexpr
    (19) boolexpr -> . boolexpr EQVI boolexpr
    (20) boolexpr -> . NOT boolexpr
    (21) boolexpr -> . PTRUE
    (22) boolexpr -> . PFALSE
    (23) boolexpr -> . EXISTS LPAREN paramlist RPAREN boolexpr
    (24) boolexpr -> . FORALL LPAREN paramlist RPAREN boolexpr
    (25) boolexpr -> . ATMOST NUMBER LPAREN boolexprlist RPAREN
    (26) boolexpr -> . ATLEAST NUMBER LPAREN boolexprlist RPAREN
    (27) boolexpr -> . EXACTLY NUMBER LPAREN boolexprlist RPAREN
    (28) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN boolexprlist RPAREN
    (29) boolexpr -> . ATMOST NUMBER LPAREN paramlist RPAREN boolexpr
    (30) boolexpr -> . ATLEAST NUMBER LPAREN paramlist RPAREN boolexpr
    (31) boolexpr -> . EXACTLY NUMBER LPAREN paramlist RPAREN boolexpr
    (32) boolexpr -> . BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr
    (35) boolexpr -> . atom
    (36) boolexpr -> . atom AT NUMBER
    (37) boolexpr -> . LPAREN boolexpr RPAREN
    (38) boolexpr -> . LBRACK numexpr GT numexpr RBRACK
    (39) boolexpr -> . LBRACK numexpr LT numexpr RBRACK
    (40) boolexpr -> . LBRACK numexpr GEQ numexpr RBRACK
    (41) boolexpr -> . LBRACK numexpr LEQ numexpr RBRACK
    (42) boolexpr -> . LBRACK numexpr EQ numexpr RBRACK
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 17
    PTRUE           shift and go to state 18
    PFALSE          shift and go to state 19
    EXISTS          shift and go to state 20
    FORALL          shift and go to state 22
    ATMOST          shift and go to state 23
    ATLEAST         shift and go to state 24
    EXACTLY         shift and go to state 25
    BETWEEN         shift and go to state 26
    LPAREN          shift and go to state 21
    LBRACK          shift and go to state 28
    ID              shift and go to state 15

    boolexpr                       shift and go to state 186
    atom                           shift and go to state 27

state 177

    (70) effect -> FORALL . LPAREN paramlist RPAREN LBRACE effects RBRACE

    LPAREN          shift and go to state 187


state 178

    (9) setexpr -> LBRACK tnumexpr COMMA tnumexpr RBRACK .

    SEMICOLON       reduce using rule 9 (setexpr -> LBRACK tnumexpr COMMA tnumexpr RBRACK .)
    COMMA           reduce using rule 9 (setexpr -> LBRACK tnumexpr COMMA tnumexpr RBRACK .)
    RPAREN          reduce using rule 9 (setexpr -> LBRACK tnumexpr COMMA tnumexpr RBRACK .)


state 179

    (32) boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr .
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    SEMICOLON       reduce using rule 32 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr .)
    RPAREN          reduce using rule 32 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr .)
    COMMA           reduce using rule 32 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr .)
    LBRACE          reduce using rule 32 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr .)
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42

  ! AND             [ reduce using rule 32 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! OR              [ reduce using rule 32 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! IMPL            [ reduce using rule 32 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr .) ]
  ! EQVI            [ reduce using rule 32 (boolexpr -> BETWEEN NUMBER NUMBER LPAREN paramlist RPAREN boolexpr .) ]


state 180

    (74) statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects . RBRACE

    RBRACE          shift and go to state 188


state 181

    (75) statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE .

    ID              reduce using rule 75 (statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE .)
    TYPE            reduce using rule 75 (statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE .)
    SOURCE          reduce using rule 75 (statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE .)
    SOURCEFORMULA   reduce using rule 75 (statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE .)
    TARGET          reduce using rule 75 (statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE .)
    TRAJECTORYFORMULA reduce using rule 75 (statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE .)
    TRANSITION      reduce using rule 75 (statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE .)
    $end            reduce using rule 75 (statement -> TRANSITION ID LPAREN RPAREN boolexpr LBRACE effects RBRACE .)


state 182

    (65) effects -> effect effects .

    RBRACE          reduce using rule 65 (effects -> effect effects .)


state 183

    (66) effect -> atom SEMICOLON .

    NOT             reduce using rule 66 (effect -> atom SEMICOLON .)
    IF              reduce using rule 66 (effect -> atom SEMICOLON .)
    FORALL          reduce using rule 66 (effect -> atom SEMICOLON .)
    ID              reduce using rule 66 (effect -> atom SEMICOLON .)
    RBRACE          reduce using rule 66 (effect -> atom SEMICOLON .)


state 184

    (68) effect -> atom ASSIGN . numexpr SEMICOLON
    (43) numexpr -> . LPAREN numexpr RPAREN
    (44) numexpr -> . NUMBER
    (45) numexpr -> . atom
    (46) numexpr -> . numexpr PLUS numexpr
    (47) numexpr -> . numexpr MINUS numexpr
    (48) numexpr -> . numexpr TIMES numexpr
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    LPAREN          shift and go to state 53
    NUMBER          shift and go to state 54
    ID              shift and go to state 15

    atom                           shift and go to state 55
    numexpr                        shift and go to state 189

state 185

    (67) effect -> NOT atom . SEMICOLON

    SEMICOLON       shift and go to state 190


state 186

    (69) effect -> IF boolexpr . LBRACE effects RBRACE
    (16) boolexpr -> boolexpr . AND boolexpr
    (17) boolexpr -> boolexpr . OR boolexpr
    (18) boolexpr -> boolexpr . IMPL boolexpr
    (19) boolexpr -> boolexpr . EQVI boolexpr

    LBRACE          shift and go to state 191
    AND             shift and go to state 39
    OR              shift and go to state 40
    IMPL            shift and go to state 41
    EQVI            shift and go to state 42


state 187

    (70) effect -> FORALL LPAREN . paramlist RPAREN LBRACE effects RBRACE
    (71) paramlist -> . param
    (72) paramlist -> . param COMMA paramlist
    (73) param -> . ID COLON setexpr

    ID              shift and go to state 78

    paramlist                      shift and go to state 192
    param                          shift and go to state 77

state 188

    (74) statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE .

    ID              reduce using rule 74 (statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE .)
    TYPE            reduce using rule 74 (statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE .)
    SOURCE          reduce using rule 74 (statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE .)
    SOURCEFORMULA   reduce using rule 74 (statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE .)
    TARGET          reduce using rule 74 (statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE .)
    TRAJECTORYFORMULA reduce using rule 74 (statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE .)
    TRANSITION      reduce using rule 74 (statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE .)
    $end            reduce using rule 74 (statement -> TRANSITION ID LPAREN paramlist RPAREN boolexpr LBRACE effects RBRACE .)


state 189

    (68) effect -> atom ASSIGN numexpr . SEMICOLON
    (46) numexpr -> numexpr . PLUS numexpr
    (47) numexpr -> numexpr . MINUS numexpr
    (48) numexpr -> numexpr . TIMES numexpr

    SEMICOLON       shift and go to state 193
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    TIMES           shift and go to state 93


state 190

    (67) effect -> NOT atom SEMICOLON .

    NOT             reduce using rule 67 (effect -> NOT atom SEMICOLON .)
    IF              reduce using rule 67 (effect -> NOT atom SEMICOLON .)
    FORALL          reduce using rule 67 (effect -> NOT atom SEMICOLON .)
    ID              reduce using rule 67 (effect -> NOT atom SEMICOLON .)
    RBRACE          reduce using rule 67 (effect -> NOT atom SEMICOLON .)


state 191

    (69) effect -> IF boolexpr LBRACE . effects RBRACE
    (64) effects -> . effect
    (65) effects -> . effect effects
    (66) effect -> . atom SEMICOLON
    (67) effect -> . NOT atom SEMICOLON
    (68) effect -> . atom ASSIGN numexpr SEMICOLON
    (69) effect -> . IF boolexpr LBRACE effects RBRACE
    (70) effect -> . FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 175
    IF              shift and go to state 176
    FORALL          shift and go to state 177
    ID              shift and go to state 15

    effects                        shift and go to state 194
    effect                         shift and go to state 173
    atom                           shift and go to state 174

state 192

    (70) effect -> FORALL LPAREN paramlist . RPAREN LBRACE effects RBRACE

    RPAREN          shift and go to state 195


state 193

    (68) effect -> atom ASSIGN numexpr SEMICOLON .

    NOT             reduce using rule 68 (effect -> atom ASSIGN numexpr SEMICOLON .)
    IF              reduce using rule 68 (effect -> atom ASSIGN numexpr SEMICOLON .)
    FORALL          reduce using rule 68 (effect -> atom ASSIGN numexpr SEMICOLON .)
    ID              reduce using rule 68 (effect -> atom ASSIGN numexpr SEMICOLON .)
    RBRACE          reduce using rule 68 (effect -> atom ASSIGN numexpr SEMICOLON .)


state 194

    (69) effect -> IF boolexpr LBRACE effects . RBRACE

    RBRACE          shift and go to state 196


state 195

    (70) effect -> FORALL LPAREN paramlist RPAREN . LBRACE effects RBRACE

    LBRACE          shift and go to state 197


state 196

    (69) effect -> IF boolexpr LBRACE effects RBRACE .

    NOT             reduce using rule 69 (effect -> IF boolexpr LBRACE effects RBRACE .)
    IF              reduce using rule 69 (effect -> IF boolexpr LBRACE effects RBRACE .)
    FORALL          reduce using rule 69 (effect -> IF boolexpr LBRACE effects RBRACE .)
    ID              reduce using rule 69 (effect -> IF boolexpr LBRACE effects RBRACE .)
    RBRACE          reduce using rule 69 (effect -> IF boolexpr LBRACE effects RBRACE .)


state 197

    (70) effect -> FORALL LPAREN paramlist RPAREN LBRACE . effects RBRACE
    (64) effects -> . effect
    (65) effects -> . effect effects
    (66) effect -> . atom SEMICOLON
    (67) effect -> . NOT atom SEMICOLON
    (68) effect -> . atom ASSIGN numexpr SEMICOLON
    (69) effect -> . IF boolexpr LBRACE effects RBRACE
    (70) effect -> . FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE
    (58) atom -> . ID
    (59) atom -> . ID LPAREN termlist RPAREN

    NOT             shift and go to state 175
    IF              shift and go to state 176
    FORALL          shift and go to state 177
    ID              shift and go to state 15

    effects                        shift and go to state 198
    effect                         shift and go to state 173
    atom                           shift and go to state 174

state 198

    (70) effect -> FORALL LPAREN paramlist RPAREN LBRACE effects . RBRACE

    RBRACE          shift and go to state 199


state 199

    (70) effect -> FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE .

    NOT             reduce using rule 70 (effect -> FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE .)
    IF              reduce using rule 70 (effect -> FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE .)
    FORALL          reduce using rule 70 (effect -> FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE .)
    ID              reduce using rule 70 (effect -> FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE .)
    RBRACE          reduce using rule 70 (effect -> FORALL LPAREN paramlist RPAREN LBRACE effects RBRACE .)

